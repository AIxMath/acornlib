from nat import Nat
from rat import Rat
from real_base import is_cut, is_lower, is_greatest, has_greatest, is_dedekind_cut
from real_ring import Real, converges, converges_to, limit

// This file proves theorems about sets of real numbers.

class Real {
    // Placeholder to let other modules import Real from here.
}

// Not strict.
define is_upper_bound(s: Real -> Bool, x: Real) -> Bool {
    forall(y: Real) {
        s(y) implies y <= x
    }
}

define is_least_upper_bound(s: Real -> Bool, x: Real) -> Bool {
    is_upper_bound(s, x) and
    forall(y: Real) {
        is_upper_bound(s, y) implies x <= y
    }
}

define is_not_upper_bound(s: Real -> Bool, x: Real) -> Bool {
    not is_upper_bound(s, x)
}

// TODO: Prove that is_not_upper_bound is a Dedekind cut.

// theorem ub_imp_lub(s: Real -> Bool, x: Real) {
//     is_upper_bound(s, x) implies exists(y: Real) {
//         is_least_upper_bound(s, y)
//     }
// }